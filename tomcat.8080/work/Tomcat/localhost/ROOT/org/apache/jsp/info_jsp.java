/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.4
 * Generated at: 2025-03-16 19:48:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.List;
import uk.ac.ucl.model.Note.Note;
import uk.ac.ucl.model.NoteType;
import uk.ac.ucl.model.Note.LinkNote;
import uk.ac.ucl.model.Note.ImageNote;

public final class info_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(7);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("uk.ac.ucl.model.Note.LinkNote");
    _jspx_imports_classes.add("uk.ac.ucl.model.NoteType");
    _jspx_imports_classes.add("uk.ac.ucl.model.Note.Note");
    _jspx_imports_classes.add("uk.ac.ucl.model.Note.ImageNote");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("  <title>Note Info</title>\n");
      out.write("  <style>\n");
      out.write("    body {\n");
      out.write("      max-width: 800px;\n");
      out.write("      margin: 0 auto;\n");
      out.write("      padding: 20px;\n");
      out.write("      font-family: 'Georgia', serif;\n");
      out.write("      background-color: #f4f1ea;\n");
      out.write("      color: #5a4d41;\n");
      out.write("    }\n");
      out.write("    h1 {\n");
      out.write("      text-align: center;\n");
      out.write("      color: #8b7d6b;\n");
      out.write("      padding-bottom: 10px;\n");
      out.write("      border-bottom: 1px solid #d9d2c9;\n");
      out.write("    }\n");
      out.write("    h2 {\n");
      out.write("      color: #8b7d6b;\n");
      out.write("      margin-top: 30px;\n");
      out.write("      padding-bottom: 5px;\n");
      out.write("      border-bottom: 1px dashed #d9d2c9;\n");
      out.write("    }\n");
      out.write("    .note-info {\n");
      out.write("      background-color: #e6e0d4;\n");
      out.write("      padding: 15px;\n");
      out.write("      margin: 10px 0;\n");
      out.write("      border: 1px solid #d9d2c9;\n");
      out.write("      border-radius: 5px;\n");
      out.write("    }\n");
      out.write("    p {\n");
      out.write("      margin: 10px 0;\n");
      out.write("      display: flex;\n");
      out.write("      justify-content: space-between;\n");
      out.write("      align-items: center;\n");
      out.write("    }\n");
      out.write("    p span.label {\n");
      out.write("      font-weight: bold;\n");
      out.write("      color: #8b7d6b;\n");
      out.write("      flex: 0 0 100px;\n");
      out.write("    }\n");
      out.write("    p span.value {\n");
      out.write("      flex: 1;\n");
      out.write("      text-align: left;\n");
      out.write("    }\n");
      out.write("    /* 图片特定样式 */\n");
      out.write("    .image-container {\n");
      out.write("      max-width: 100%;\n");
      out.write("      overflow: hidden;\n");
      out.write("    }\n");
      out.write("    .note-image {\n");
      out.write("      max-width: 100%;\n");
      out.write("      max-height: 400px; /* 设置最大高度 */\n");
      out.write("      width: auto;\n");
      out.write("      height: auto;\n");
      out.write("      object-fit: contain; /* 保持图片比例 */\n");
      out.write("      border-radius: 5px;\n");
      out.write("      display: block;\n");
      out.write("      margin: 0 auto;\n");
      out.write("    }\n");
      out.write("    form {\n");
      out.write("      display: flex;\n");
      out.write("      flex-direction: column;\n");
      out.write("      gap: 15px;\n");
      out.write("      max-width: 500px;\n");
      out.write("      margin: 0 auto;\n");
      out.write("    }\n");
      out.write("    label {\n");
      out.write("      color: #5a4d41;\n");
      out.write("      font-weight: bold;\n");
      out.write("    }\n");
      out.write("    input[type=\"text\"], textarea {\n");
      out.write("      width: 100%;\n");
      out.write("      padding: 8px;\n");
      out.write("      border: 1px solid #d9d2c9;\n");
      out.write("      border-radius: 5px;\n");
      out.write("      background-color: #fffcf7;\n");
      out.write("      font-family: 'Georgia', serif;\n");
      out.write("      color: #5a4d41;\n");
      out.write("      box-sizing: border-box;\n");
      out.write("    }\n");
      out.write("    textarea {\n");
      out.write("      height: 100px;\n");
      out.write("      resize: vertical;\n");
      out.write("    }\n");
      out.write("    input[type=\"submit\"], button {\n");
      out.write("      padding: 10px;\n");
      out.write("      background-color: #a67f59;\n");
      out.write("      color: #f4f1ea;\n");
      out.write("      border: none;\n");
      out.write("      border-radius: 5px;\n");
      out.write("      cursor: pointer;\n");
      out.write("      font-family: 'Georgia', serif;\n");
      out.write("      font-size: 1.1em;\n");
      out.write("      transition: background-color 0.3s;\n");
      out.write("    }\n");
      out.write("    input[type=\"submit\"]:hover, button:hover {\n");
      out.write("      background-color: #8b7d6b;\n");
      out.write("      text-decoration: underline;\n");
      out.write("    }\n");
      out.write("    .button-container {\n");
      out.write("      display: flex;\n");
      out.write("      justify-content: center;\n");
      out.write("      gap: 20px;\n");
      out.write("      margin-top: 20px;\n");
      out.write("    }\n");
      out.write("    .delete-form {\n");
      out.write("      margin-top: 20px;\n");
      out.write("    }\n");
      out.write("    button.back-button {\n");
      out.write("      width: 200px;\n");
      out.write("      margin: 30px auto 0;\n");
      out.write("      display: block;\n");
      out.write("    }\n");
      out.write("    a {\n");
      out.write("      color: #a67f59;\n");
      out.write("      text-decoration: none;\n");
      out.write("    }\n");
      out.write("    a:hover {\n");
      out.write("      text-decoration: underline;\n");
      out.write("    }\n");
      out.write("  </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<h1>Note Info</h1>\n");
      out.write("<div class=\"note-info\">\n");
      out.write("  ");

    Note note = (Note) request.getAttribute("note");
    String label = note.getLabel();
    String text = note.getText();
    Integer key = note.getID();
    String timestamp = note.getTimestamp();

    // Link Note
    if (note.getNoteType() == NoteType.LINK) {
      String eLink = ((LinkNote)note).getLink();
  
      out.write("\n");
      out.write("  <p><span class=\"label\">Key:</span><span class=\"value\">");
      out.print( key );
      out.write("</span></p>\n");
      out.write("  <p><span class=\"label\">Label:</span><span class=\"value\">");
      out.print( label );
      out.write("</span></p>\n");
      out.write("  <p><span class=\"label\">Text:</span><span class=\"value\">");
      out.print( text );
      out.write("</span></p>\n");
      out.write("  <p><span class=\"label\">Link:</span><span class=\"value\"><a href=\"");
      out.print( eLink );
      out.write("\" target=\"_blank\">");
      out.print( eLink );
      out.write("</a></span></p>\n");
      out.write("  <p><span class=\"label\">Timestamp:</span><span class=\"value\">");
      out.print( timestamp );
      out.write("</span></p>\n");
      out.write("  ");

    // Image Note
  } else if (note.getNoteType() == NoteType.IMAGE) {
    String imageUrl = ((ImageNote)note).getImage();
  
      out.write("\n");
      out.write("  <p><span class=\"label\">Key:</span><span class=\"value\">");
      out.print( key );
      out.write("</span></p>\n");
      out.write("  <p><span class=\"label\">Label:</span><span class=\"value\">");
      out.print( label );
      out.write("</span></p>\n");
      out.write("  <p><span class=\"label\">Picture:</span>\n");
      out.write("    <span class=\"value image-container\">\n");
      out.write("                <img src=\"");
      out.print( imageUrl );
      out.write("\" alt=\"");
      out.print( label );
      out.write("\" class=\"note-image\">\n");
      out.write("            </span>\n");
      out.write("  </p>\n");
      out.write("  <p><span class=\"label\">Text:</span><span class=\"value\">");
      out.print( text );
      out.write("</span></p>\n");
      out.write("  <p><span class=\"label\">Timestamp:</span><span class=\"value\">");
      out.print( timestamp );
      out.write("</span></p>\n");
      out.write("  ");

  } else { // Default Note
  
      out.write("\n");
      out.write("  <p><span class=\"label\">Key:</span><span class=\"value\">");
      out.print( key );
      out.write("</span></p>\n");
      out.write("  <p><span class=\"label\">Label:</span><span class=\"value\">");
      out.print( label );
      out.write("</span></p>\n");
      out.write("  <p><span class=\"label\">Text:</span><span class=\"value\">");
      out.print( text );
      out.write("</span></p>\n");
      out.write("  <p><span class=\"label\">Timestamp:</span><span class=\"value\">");
      out.print( timestamp );
      out.write("</span></p>\n");
      out.write("  ");

    }
  
      out.write("\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<h2>Edit this note</h2>\n");
      out.write("<form action=\"/viewNoteInfo.html\" method=\"post\">\n");
      out.write("  <input type=\"hidden\" name=\"key\" value=\"");
      out.print( key );
      out.write("\">\n");
      out.write("  <label for=\"label\">Label:</label>\n");
      out.write("  <input type=\"text\" id=\"label\" name=\"label\" value=\"");
      out.print( label );
      out.write("\">\n");
      out.write("  <label for=\"text\">Text:</label>\n");
      out.write("  <textarea id=\"text\" name=\"text\">");
      out.print( text );
      out.write("</textarea>\n");
      out.write("  <div class=\"button-container\">\n");
      out.write("    <input type=\"submit\" value=\"Save Changes\">\n");
      out.write("  </div>\n");
      out.write("</form>\n");
      out.write("\n");
      out.write("<form action=\"/deleteNote.html\" method=\"post\" class=\"delete-form\">\n");
      out.write("  <input type=\"hidden\" name=\"key\" value=\"");
      out.print( key );
      out.write("\">\n");
      out.write("  <div class=\"button-container\">\n");
      out.write("    <input type=\"submit\" value=\"Delete Note\">\n");
      out.write("  </div>\n");
      out.write("</form>\n");
      out.write("\n");
      out.write("<button class=\"back-button\" onclick=\"window.location.href='http://localhost:8080/notesList.html'\">Back to Notes List</button>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
